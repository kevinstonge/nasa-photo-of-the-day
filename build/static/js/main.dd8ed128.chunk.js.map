{"version":3,"sources":["components/Header.js","components/Controls.js","formatDate.js","components/APOD.js","components/Background.js","App.js","index.js"],"names":["Header","props","Controls","sameDate","date1","date2","getYear","getMonth","getDate","useState","datePopup","setDatePopup","dateRange","startDate","Date","endDate","exclude","className","date","minDate","maxDate","disabledDates","onChange","setDate","onClick","formatDate","dateObject","year","getFullYear","month","day","APOD","data","media_type","src","url","alt","title","aria-label","explanation","copyright","Background","memo","stars","Array","fill","map","s","top","Math","random","left","animationDelay","floor","e","i","key","style","App","setData","useEffect","a","axios","get","process","then","r","catch","console","log","hdurl","getData","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dd8ed128.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Header.scss\";\r\nconst Header = props => {\r\n    return(\r\n        <header>\r\n            <h1>Astronomy Picture of the Day</h1>\r\n            <h2>-from NASA-</h2>\r\n        </header>\r\n    )\r\n}\r\nexport default Header;","import React, { Fragment, useState } from \"react\";\r\nimport \"./Controls.scss\";\r\nimport { Calendar } from \"react-date-range\";\r\n\r\nconst Controls = (props) => {\r\n  const sameDate = (date1, date2) => {\r\n    if (\r\n      date1.getYear() === date2.getYear() &&\r\n      date1.getMonth() === date2.getMonth() &&\r\n      date1.getDate() === date2.getDate()\r\n    ) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n  const [datePopup, setDatePopup] = useState(false);\r\n  const changeDate = (date) => {\r\n    props.setDate(date);\r\n    setDatePopup(false);\r\n  };\r\n  const dateRange = {\r\n    startDate: new Date(\"Jun 16, 1995\"),\r\n    endDate: new Date(),\r\n    exclude: [\r\n      new Date(\"June 17, 1995\"),\r\n      new Date(\"June 18, 1995\"),\r\n      new Date(\"June 19, 1995\"),\r\n    ],\r\n  };\r\n  return (\r\n    <Fragment>\r\n      {datePopup === true ? (\r\n        <div className=\"calendar_container\">\r\n          <Calendar\r\n            date={new Date()}\r\n            minDate={dateRange.startDate}\r\n            maxDate={dateRange.endDate}\r\n            disabledDates={dateRange.exclude}\r\n            onChange={changeDate}\r\n          />\r\n          <button onClick={() => setDatePopup(false)}>never mind</button>\r\n        </div>\r\n      ) : null}\r\n      <div className=\"apod_controls\">\r\n        {sameDate(props.date, dateRange.startDate) ? (\r\n          <Fragment>\r\n            <p className=\"apod_control\">|&lt; first</p>\r\n            <p className=\"apod_control\">&lt; previous</p>\r\n          </Fragment>\r\n        ) : (\r\n          <Fragment>\r\n            <p\r\n              className=\"apod_control enabled\"\r\n              onClick={() => props.setDate(dateRange.startDate)}\r\n            >\r\n              |&lt; first\r\n            </p>\r\n            <p\r\n              className=\"apod_control enabled\"\r\n              onClick={() =>\r\n                props.setDate(\r\n                  new Date(props.date.setDate(props.date.getDate() - 1))\r\n                )\r\n              }\r\n            >\r\n              &lt; previous\r\n            </p>\r\n          </Fragment>\r\n        )}\r\n\r\n        <p className=\"apod_control enabled\" onClick={() => setDatePopup(true)}>\r\n          pick date\r\n        </p>\r\n\r\n        {sameDate(props.date, new Date()) ? (\r\n          <Fragment>\r\n            <p className=\"apod_control\">next &gt;</p>\r\n            <p className=\"apod_control\">last &gt;|</p>\r\n          </Fragment>\r\n        ) : (\r\n          <Fragment>\r\n            <p\r\n              className=\"apod_control enabled\"\r\n              onClick={() =>\r\n                props.setDate(\r\n                  new Date(props.date.setDate(props.date.getDate() + 1))\r\n                )\r\n              }\r\n            >\r\n              next &gt;\r\n            </p>\r\n            <p\r\n              className=\"apod_control enabled\"\r\n              onClick={() => props.setDate(dateRange.endDate)}\r\n            >\r\n              last &gt;|\r\n            </p>\r\n          </Fragment>\r\n        )}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\nexport default Controls;\r\n","const formatDate = (dateObject) => {\r\n    let year = dateObject.getFullYear();\r\n    let month = dateObject.getMonth() + 1;\r\n    month = (month < 10) ? `0${month}` : month;\r\n    let day = dateObject.getDate();\r\n    day = (day < 10) ? `0${day}` : day;\r\n    return `${year}-${month}-${day}`\r\n}\r\nexport default formatDate;","import React, { Fragment } from \"react\";\r\nimport \"react-date-range/dist/styles.css\";\r\nimport \"react-date-range/dist/theme/default.css\";\r\nimport Controls from \"./Controls\";\r\nimport \"./APOD.scss\";\r\nimport formatDate from \"../formatDate\";\r\n\r\nconst APOD = (props) => {\r\n  return (\r\n    <div className=\"apod_container\">\r\n      <Controls date={props.date} setDate={props.setDate} />\r\n      <p className=\"date_indicator\">{formatDate(props.date)}</p>\r\n      {props.data && props.data.data ? (\r\n        <Fragment>\r\n          <div className=\"image_container\">\r\n            {props.data.data.media_type === \"image\" ? (\r\n              <img src={props.data.data.url} alt={props.data.data.title}></img>\r\n            ) : null}\r\n            {props.data.data.media_type === \"video\" ? (\r\n              <object\r\n                data={props.data.data.url}\r\n                aria-label={props.data.data.title}\r\n              ></object>\r\n            ) : null}\r\n            <div className=\"title_container\">\r\n              <h2>{props.data.data.title}</h2>\r\n            </div>\r\n          </div>\r\n          <div className=\"explanation_container\">\r\n            <h3>About this image:</h3>\r\n            <p>{props.data.data.explanation}</p>\r\n            {props.data.data.copyright ? (\r\n              <p>copyright: {props.data.data.copyright}</p>\r\n            ) : null}\r\n          </div>\r\n        </Fragment>\r\n      ) : (\r\n        <h3>Loading</h3>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default APOD;\r\n","import React, { memo } from \"react\";\r\nimport \"./Background.scss\";\r\n\r\nconst Background = memo(() => {\r\n    //stars is array of dom elements with random positions\r\n    const stars = new Array(150).fill(0).map(s=>{\r\n        return({\r\n        top: `${Math.random()*100}vh`,\r\n        left: `${Math.random()*100}vw`,\r\n        animationDelay: `-${Math.floor(Math.random()*30)}s`,\r\n        })\r\n    });\r\n    return(\r\n        <div>\r\n        {stars.map((e,i)=>\r\n            <div \r\n                className=\"star\"\r\n                key={`star${i}`}\r\n                style={{top:e.top, left:e.left, animationDelay:e.animationDelay}}    \r\n            >\r\n\r\n            </div>\r\n        )\r\n        }   \r\n        </div>\r\n    )\r\n});\r\nexport default Background;","import React, { useState, useEffect } from \"react\";\r\nimport \"./App.scss\";\r\nimport Header from \"./components/Header\";\r\nimport APOD from \"./components/APOD\";\r\nimport Background from \"./components/Background\";\r\n// eslint-disable-next-line\r\nimport axios from \"axios\";\r\n// eslint-disable-next-line\r\nimport formatDate from \"./formatDate\";\r\n\r\nfunction App() {\r\n  const [date, setDate] = useState(new Date());\r\n  const [data, setData] = useState({});\r\n  useEffect(() => {\r\n    //production code\r\n    const getData = async () => {\r\n      axios\r\n        .get(\r\n          `https://api.nasa.gov/planetary/apod?api_key=${\r\n            process.env.REACT_APP_NASA_APOD_API_KEY\r\n          }&date=${formatDate(date)}`\r\n        )\r\n        .then((r) => setData(r))\r\n        .catch((e) => {\r\n          console.log(e);\r\n          setData({\r\n            data: {\r\n              title: \"error: no image found\",\r\n              explanation: \"something went wrong, sorry\",\r\n              date: date,\r\n              copyright: \"\",\r\n              hdurl: \"\",\r\n              media_type: \"image\",\r\n              url: \"black.png\",\r\n            },\r\n          });\r\n        });\r\n    };\r\n    getData();\r\n    //end production code\r\n\r\n    //dev code:\r\n    // setData(\r\n    //   JSON.parse(`{\"data\":{\r\n    //     \"copyright\":\"Jeff Dai\",\r\n    //     \"date\":\"2020-07-25\",\r\n    //     \"explanation\":\"On July 23, this Long March 5 heavy-lift rocket rose into a blue morning sky from China's Hainan Island Wenchang Satellite Launch Center. The rocket carried an orbiter, lander, and rover to ask Heavenly Questions on the ambitious Tianwen-1 mission to Mars. In fact Tianwen-1 was the second of three missions scheduled for a July departure to the Red Planet. The United Arab Emirates launched its Amal (Hope) Mars probe on July 19.  NASA's launch of its Mars Perseverance Rover from Cape Canaveral Air Force Station, USA is scheduled for July 30. That is the last planned Mars launch for 2020 though. The minimum-energy launch window for an expedition to Mars is coming to a close in 2020 and will reopen in 2022.  Comet NEOWISE images from planet Earth: July 24, 23, 22\",\r\n    //     \"hdurl\":\"https://apod.nasa.gov/apod/image/2007/169A2911Dai.jpg\",\r\n    //     \"media_type\":\"image\",\r\n    //     \"service_version\":\"v1\",\r\n    //     \"title\":\"Tianwen-1 Mission to Mars\",\r\n    //     \"url\":\"https://apod.nasa.gov/apod/image/2007/169A2911Dai1024.jpg\"},\r\n    //     \"status\":200,\"statusText\":\"OK\",\"headers\":{\"content-type\":\"application/json\"},\"config\":{\"url\":\"https://api.nasa.gov/planetary/apod?api_key=2tHL7PTeXk91n3n1G7DcZtgEMAbC5VzzpLmh0BvF\",\"method\":\"get\",\"headers\":{\"Accept\":\"application/json, text/plain, */*\"},\"transformRequest\":[null],\"transformResponse\":[null],\"timeout\":0,\"xsrfCookieName\":\"XSRF-TOKEN\",\"xsrfHeaderName\":\"X-XSRF-TOKEN\",\"maxContentLength\":-1},\"request\":{}}`)\r\n    // )\r\n    //end dev code\r\n  }, [date]);\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n      <APOD data={data} setDate={setDate} date={date} />\r\n      <Background />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}